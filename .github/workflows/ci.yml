name: SafeVote CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build Docker Image & Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRESS_DB: safevote
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Wait for PostgreSQL
        run: |
          until PGPASSWORD=password psql -h localhost -U postgres -c '\l'; do
            >&2 echo "PostgreSQL is unavailable - sleeping"
            sleep 5
          done

      - name: Create Database
        run: |
          export PGPASSWORD=password
          psql -h localhost -U postgres -c "CREATE DATABASE safevote"

      - name: Run Migrations Tests
        run: npx knex migrate:latest

      - name: Seed Test Data
        run: npx knex seed:run

      - name: Run Integration Tests
        run: npm test

  build-and-deploy:
    name: Build Docker Image and Deploy to Kubernetes
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Registry
        uses:  docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Image to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tages: ${{ vars.DOCKHUB_USERNAME }}/safevote-backend:latest